package gerenciadorreunioes.visao;

import gerenciadorreunioes.controle.AlunoControl;
import gerenciadorreunioes.controle.AtaControl;
import gerenciadorreunioes.controle.EnviarEmailControl;
import gerenciadorreunioes.controle.GrupoControl;
import gerenciadorreunioes.controle.LoginControl;
import gerenciadorreunioes.controle.PautaControl;
import gerenciadorreunioes.controle.ReuniaoControl;
import gerenciadorreunioes.controle.ServidorControl;
import gerenciadorreunioes.modelo.Aluno;
import gerenciadorreunioes.modelo.Ata;
import gerenciadorreunioes.modelo.Grupo;
import gerenciadorreunioes.modelo.Pauta;
import gerenciadorreunioes.modelo.Reuniao;
import gerenciadorreunioes.modelo.Servidor;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultListModel;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import org.apache.commons.mail.EmailException;

/**
 *
 * @author Hernane
 */
public class GerenciarReunioesGUI extends javax.swing.JFrame {

    private GrupoControl grupoControl = new GrupoControl();
    private ServidorControl servidorControl = new ServidorControl();
    private DefaultListModel modelo = new DefaultListModel();
    private ArrayList<String> arrayGrupos = grupoControl.pegaCodigoNomeGrupos();
    private ArrayList<String> arrayServidores = new ArrayList<>();
    private AlunoControl alunoControl = new AlunoControl();
    private AtaControl ataControl = new AtaControl();
    private PautaControl pautaControl = new PautaControl();
    private EnviarEmailControl enviaEmail = new EnviarEmailControl();
    private ReuniaoControl reuniaoControl = new ReuniaoControl();
    private LoginControl loginControl = new LoginControl();
    private Servidor coordenador;
    private Reuniao reuniaoAntiga;
    private boolean clicouLista = false;

    /**
     *
     */
    /**
     * Creates new form GerenciarReunioesGUI
     */
    public GerenciarReunioesGUI() {
        initComponents();
        coordenador = LoginControl.retornaServidorLogado();
        iniciaComponentes();
        listaReunioes();
    }

    private void iniciaComponentes() {
        jTextFieldNovoPonto.setEnabled(true);
        jButtonAlterarReuniao.setEnabled(false);
        jButtonExcluirPonto.setEnabled(false);
        jComboBoxGrupoParticipante.removeAllItems();
        jButtonCadastrarPonto.setEnabled(false);
        for (int i = 0; i < arrayGrupos.size(); i++) {
            jComboBoxGrupoParticipante.addItem(arrayGrupos.get(i));
        }
        atualizaComboResponsavelAta();
    }

    private void atualizaComboResponsavelAta() {
        arrayServidores.removeAll(arrayServidores);
        ArrayList<Servidor> arrayAux = servidorControl.getServidoresParticipantesDoGrupo(pegaCodigoGrupo());
        for (int i = 0; i < arrayAux.size(); i++) {
            arrayServidores.add(arrayAux.get(i).getSiape() + " - " + arrayAux.get(i).getNome());
        }
        jComboBoxResponsavelAta.removeAllItems();
        for (int i = 0; i < arrayServidores.size(); i++) {
            jComboBoxResponsavelAta.addItem(arrayServidores.get(i));
        }
    }

    private void listaReunioes() {
        ArrayList<Reuniao> reunioes = new ArrayList<>();
        for (Grupo gru : grupoControl.getGrupos(coordenador.getSiape())) {
            if (reuniaoControl.getReunioes(gru.getCodigo()).size() > 0) {
                for (Reuniao reu : reuniaoControl.getReunioes(gru.getCodigo())) {
                    reunioes.add(reu);
                }
            }
            DefaultListModel e = new DefaultListModel();
            jListReunioes.removeAll();
            for (int i = 0; i < reunioes.size(); i++) {
                e.addElement(reunioes.get(i).getCodigo() + " - " + reunioes.get(i).getNome());
            }
            jListReunioes.setModel(e);
        }
    }

    private void deletarReuniao() {
        String selecionado = (String) jListReunioes.getSelectedValue();
        String[] pegaCodigo = selecionado.split(" - ");
        int cod = Integer.parseInt(pegaCodigo[0]);
        boolean v = reuniaoControl.deleta(cod);
        if (v) {
            JOptionPane.showMessageDialog(this, "Reunião deletada com sucesso");
            enviaEmail(2);
        } else {
            JOptionPane.showMessageDialog(this, "Não foi possível deletar esta reunião, tente novamente");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxGrupoParticipante = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jButtonNovoPonto = new javax.swing.JButton();
        jButtonExcluirPonto = new javax.swing.JButton();
        jTextFieldNovoPonto = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListPontosPauta = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldHora = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jButtonCadastrarPonto = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jTextFieldLocal = new javax.swing.JTextField();
        jComboBoxResponsavelAta = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListReunioes = new javax.swing.JList<>();
        jButtonExcluirReuniao = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jButtonConcluir = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jButtonAlterarReuniao = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gerenciar Reuniões - Gerenciador de Reuniões");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cadastrar Reunião", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 18))); // NOI18N

        jLabel1.setText("Selecione um grupo para participar da reunião:");

        jComboBoxGrupoParticipante.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBoxGrupoParticipanteMouseClicked(evt);
            }
        });
        jComboBoxGrupoParticipante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxGrupoParticipanteActionPerformed(evt);
            }
        });

        jLabel2.setText("Pontos de pauta:");

        jButtonNovoPonto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/pauta.jpg"))); // NOI18N
        jButtonNovoPonto.setText("Novo");
        jButtonNovoPonto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNovoPontoActionPerformed(evt);
            }
        });

        jButtonExcluirPonto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/deletar.jpg"))); // NOI18N
        jButtonExcluirPonto.setText("Excluir Ponto de Pauta");
        jButtonExcluirPonto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirPontoActionPerformed(evt);
            }
        });

        jTextFieldNovoPonto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNovoPontoActionPerformed(evt);
            }
        });

        jListPontosPauta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListPontosPautaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jListPontosPauta);

        jLabel3.setText("Pontos de pauta cadastrados:");

        jLabel4.setText("Selecione o participante responsável pela ATA:");

        jLabel5.setText("Data da Reunião:");

        jLabel6.setText("Horário da Reunião(HH:MM):");

        jTextFieldHora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldHoraActionPerformed(evt);
            }
        });

        jLabel7.setText("Local da Reunião:");

        jButtonCadastrarPonto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/gravar.PNG"))); // NOI18N
        jButtonCadastrarPonto.setText("Cadastrar");
        jButtonCadastrarPonto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCadastrarPontoActionPerformed(evt);
            }
        });

        jListReunioes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListReunioesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jListReunioes);

        jButtonExcluirReuniao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/deletar.jpg"))); // NOI18N
        jButtonExcluirReuniao.setText("Excluir Reunião");
        jButtonExcluirReuniao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirReuniaoActionPerformed(evt);
            }
        });

        jButtonCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/sair.png"))); // NOI18N
        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jButtonConcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/confirmar.jpg"))); // NOI18N
        jButtonConcluir.setText("Concluir Reunião");
        jButtonConcluir.setToolTipText("");
        jButtonConcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConcluirActionPerformed(evt);
            }
        });

        jLabel8.setText("Reuniões Cadastradas:");

        jButtonAlterarReuniao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/editar.png"))); // NOI18N
        jButtonAlterarReuniao.setText("Alterar Reunião");
        jButtonAlterarReuniao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAlterarReuniaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jComboBoxResponsavelAta, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButtonExcluirPonto)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel2)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jButtonNovoPonto)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jButtonCadastrarPonto))
                                        .addComponent(jScrollPane1)))))
                        .addGap(26, 26, 26))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxGrupoParticipante, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldNovoPonto, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldHora)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldLocal)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonExcluirReuniao, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonConcluir, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonAlterarReuniao, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jComboBoxGrupoParticipante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jButtonNovoPonto)
                            .addComponent(jButtonCadastrarPonto, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addComponent(jTextFieldNovoPonto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonExcluirPonto))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldLocal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonConcluir)
                            .addComponent(jButtonAlterarReuniao))
                        .addGap(15, 15, 15)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxResponsavelAta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonExcluirReuniao)
                            .addComponent(jButtonCancelar))))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldNovoPontoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNovoPontoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNovoPontoActionPerformed

    private void jButtonNovoPontoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNovoPontoActionPerformed
        jTextFieldNovoPonto.setEnabled(true);
        jButtonCadastrarPonto.setEnabled(true);
        jButtonNovoPonto.setEnabled(false);
        jButtonExcluirPonto.setEnabled(false);
    }//GEN-LAST:event_jButtonNovoPontoActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        cancelar();
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jComboBoxGrupoParticipanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxGrupoParticipanteActionPerformed

    }//GEN-LAST:event_jComboBoxGrupoParticipanteActionPerformed

    private void jButtonCadastrarPontoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCadastrarPontoActionPerformed
        cadastraPontoPauta();
    }//GEN-LAST:event_jButtonCadastrarPontoActionPerformed

    private void jButtonExcluirPontoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirPontoActionPerformed
        excluiPontoPauta();
        resetaBotoes();
    }//GEN-LAST:event_jButtonExcluirPontoActionPerformed

    private void jButtonConcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConcluirActionPerformed
        cadastraReuniao();
        limpaCampos();
        listaReunioes();
    }//GEN-LAST:event_jButtonConcluirActionPerformed

    private void jListPontosPautaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListPontosPautaMouseClicked
        if (jListPontosPauta.getModel().getSize() > 0) {
            jButtonExcluirPonto.setEnabled(true);
        }
    }//GEN-LAST:event_jListPontosPautaMouseClicked

    private void jComboBoxGrupoParticipanteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBoxGrupoParticipanteMouseClicked
        atualizaComboResponsavelAta();
    }//GEN-LAST:event_jComboBoxGrupoParticipanteMouseClicked

    private void jButtonExcluirReuniaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirReuniaoActionPerformed
        deletarReuniao();
        listaReunioes();
        resetaBotoes();
        limpaCampos();
    }//GEN-LAST:event_jButtonExcluirReuniaoActionPerformed

    private void jListReunioesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListReunioesMouseClicked
        clicouLista = true;
        jogaElementosNosCampos();
        jButtonCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/cancelar.PNG")));
    }//GEN-LAST:event_jListReunioesMouseClicked

    private void jButtonAlterarReuniaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAlterarReuniaoActionPerformed
        editarReuniao();
        limpaCampos();
        listaReunioes();
    }//GEN-LAST:event_jButtonAlterarReuniaoActionPerformed

    private void jTextFieldHoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldHoraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldHoraActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAlterarReuniao;
    private javax.swing.JButton jButtonCadastrarPonto;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonConcluir;
    private javax.swing.JButton jButtonExcluirPonto;
    private javax.swing.JButton jButtonExcluirReuniao;
    private javax.swing.JButton jButtonNovoPonto;
    private javax.swing.JComboBox<String> jComboBoxGrupoParticipante;
    private javax.swing.JComboBox<String> jComboBoxResponsavelAta;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JList<String> jListPontosPauta;
    private javax.swing.JList<String> jListReunioes;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextFieldHora;
    private javax.swing.JTextField jTextFieldLocal;
    private javax.swing.JTextField jTextFieldNovoPonto;
    // End of variables declaration//GEN-END:variables

    private void cadastraPontoPauta() {
        String pontoPauta = jTextFieldNovoPonto.getText();
        if (pontoPauta.equals("")) {
            JOptionPane.showMessageDialog(this, "Não é permitido cadastrar um Ponto de Pauta vazio !!!");
        } else {
            modelo.addElement(pontoPauta);
            jListPontosPauta.setModel(modelo);
        }
        jTextFieldNovoPonto.setText("");
        jTextFieldNovoPonto.setEnabled(false);
        jButtonNovoPonto.setEnabled(true);
        jButtonCadastrarPonto.setEnabled(false);
    }

    private void excluiPontoPauta() {
        int i = jListPontosPauta.getSelectedIndex();
        modelo.remove(i);
        jListPontosPauta.setModel(modelo);
    }

    private String separaCodigo() {
        String selecionado = (String) jComboBoxResponsavelAta.getSelectedItem();
        String[] pegaSiape = selecionado.split(" - ");
        String siape = pegaSiape[0];
        return siape;
    }

    private ArrayList<String> pegaPontos() {
        ArrayList<String> pontos = new ArrayList<>();
        for (int i = 0; i < jListPontosPauta.getModel().getSize(); i++) {
            pontos.add((String) jListPontosPauta.getModel().getElementAt(i));
        }
        return pontos;
    }

    private String retornaData() {
        String data = new SimpleDateFormat("dd-MM-yyyy").format(jDateChooser1.getDate());
        return data;
    }

    private void cadastraReuniao() {
        String data = new SimpleDateFormat("yyyy-MM-dd").format(jDateChooser1.getDate());
        Date date = null;
        try {
            DateFormat dateFor = new SimpleDateFormat("yyyy-MM-dd");
            date = (Date) dateFor.parse(data);
        } catch (ParseException e) {
        }
        boolean vazio = reuniaoControl.verificaCampos(jListPontosPauta.getModel().getSize(), data, jTextFieldHora.getText(), jTextFieldLocal.getText());
        if (vazio) {
            JOptionPane.showMessageDialog(this, "Nenhum campo pode ficar vazio !!!");
        } else {
            Reuniao x = new Reuniao();
            String selecionado = (String) jComboBoxGrupoParticipante.getSelectedItem();
            String[] pegaNome = selecionado.split(" - ");
            String nome = pegaNome[1];
            String n = jTextFieldHora.getText() + " - " + nome + " - " + data;
            x.setNome(n);
            x.setData(date);
            x.setHorarioInicio(jTextFieldHora.getText());
            x.setHorarioFim("-");
            x.setLocal(jTextFieldLocal.getText());
            x.setSiapeResponsavelAta(separaCodigo());
            x.setGrupo(pegaGrupoDoCombo(pegaCodigoGrupo()));
            reuniaoControl.adiciona(x);
            Ata a = new Ata();
            a.setStatus("Aberta");
            a.setReuniao(x);
            ataControl.adiciona(a);
            cadastraTodosOsPontos(x);
            Servidor responsavelAta = servidorControl.getServidor(pegaCodigoSelecionadoNaCombo());
            responsavelAta.setSerResponsavelAta(1);
            servidorControl.atualiza(responsavelAta);
            JOptionPane.showMessageDialog(this, "Reunião: " + x.getNome() + " cadastrada com sucesso !!!");
            enviaEmail(0);
        }
    }

    private void editarReuniao() {
        String data = new SimpleDateFormat("yyyy-MM-dd").format(jDateChooser1.getDate());
        Date date = null;
        try {
            DateFormat dateFor = new SimpleDateFormat("yyyy-MM-dd");
            date = (Date) dateFor.parse(data);
        } catch (ParseException e) {
            e.getMessage();
        }
        boolean vazio = reuniaoControl.verificaCampos(jListPontosPauta.getModel().getSize(), data, jTextFieldHora.getText(), jTextFieldLocal.getText());
        if (vazio) {
            JOptionPane.showMessageDialog(this, "Nenhum campo pode ficar vazio !!!");
        } else {
            JOptionPane.showMessageDialog(this, data);
            Reuniao x = reuniaoAntiga;
            String selecionado = (String) jComboBoxGrupoParticipante.getSelectedItem();
            String[] pegaNome = selecionado.split(" - ");
            String nome = pegaNome[1];
            nome = jTextFieldHora.getText() + " - " + nome + " - " + data;
            x.setNome(nome);
            x.setData(date);
            x.setHorarioInicio(jTextFieldHora.getText());
            x.setHorarioFim("-");
            x.setLocal(jTextFieldLocal.getText());
            x.setSiapeResponsavelAta(separaCodigo());
            x.setGrupo(pegaGrupoDoCombo(pegaCodigoGrupo()));
            reuniaoControl.atualiza(x);
            cadastraTodosOsPontos(x);
            Servidor responsavelAta = servidorControl.getServidor(pegaCodigoSelecionadoNaCombo());
            responsavelAta.setSerResponsavelAta(1);
            servidorControl.atualiza(responsavelAta);
            JOptionPane.showMessageDialog(this, "Reunião: " + x.getNome() + " editada com sucesso !!!");
            enviaEmail(1);
        }
    }

    private void cancelar() {
        if (clicouLista) {
            resetaBotoes();
            limpaCampos();
            clicouLista = false;
        } else if (coordenador.getSerCoordenador() == 1 || coordenador.getSerDe() == 1) {
            new TelaPrincipalCoordenadorGUI().setVisible(true);
            this.dispose();
        } else if (coordenador.getSerResponsavelAta() == 1) {
            new TelaPrincipalServidorComumGUI(1).setVisible(true);
            this.dispose();
        } else {
            new TelaPrincipalServidorComumGUI().setVisible(true);
            this.dispose();
        }
    }

    private int pegaCodigoGrupo() {
        String s = (String) jComboBoxGrupoParticipante.getSelectedItem();
        String[] pegaCodigo = s.split(" - ");
        int codigo = Integer.parseInt(pegaCodigo[0]);
        return codigo;
    }

    private void limpaCampos() {
        jTextFieldNovoPonto.setText("");
        jTextFieldHora.setText("");
        jTextFieldLocal.setText("");
        modelo.removeAllElements();
        jListPontosPauta.setModel(modelo);
        jDateChooser1.setDateFormatString("");
    }

    private Grupo pegaGrupoDoCombo(int codGrupo) {
        Grupo aux = null;
        for (Grupo gru : grupoControl.getGrupos()) {
            if (gru.getCodigo() == codGrupo) {
                aux = gru;
            }
        }
        return aux;
    }

    private String pegaCodigoSelecionadoNaCombo() {
        String selecionado = (String) jComboBoxResponsavelAta.getSelectedItem();
        String[] pegaCodigo = selecionado.split(" - ");
        String siape = pegaCodigo[0];
        return siape;
    }

    private void jogaElementosNosCampos() {
        if (jListReunioes.getModel().getSize() > 0) {
            reuniaoAntiga = pegaReuniaoSelecionadaNaLista();
            jTextFieldHora.setText(reuniaoAntiga.getHorarioInicio());
            jTextFieldLocal.setText(reuniaoAntiga.getLocal());
            jDateChooser1.setDate(reuniaoAntiga.getData());
            preenchePontosPauta(reuniaoAntiga);
            preencheGrupoParticipante(reuniaoAntiga);
            preencheResponsavelAta(reuniaoAntiga);
            jButtonAlterarReuniao.setEnabled(true);
            jButtonExcluirReuniao.setEnabled(true);
            jButtonConcluir.setEnabled(false);
            jButtonCancelar.setEnabled(true);
            jButtonNovoPonto.setEnabled(true);
            jButtonExcluirPonto.setEnabled(false);
            jButtonCadastrarPonto.setEnabled(false);
        } else {
            JOptionPane.showMessageDialog(this, "Sem informação !!!");
            resetaBotoes();
            limpaCampos();
        }
    }

    private void resetaBotoes() {
        jButtonNovoPonto.setEnabled(true);
        jButtonCadastrarPonto.setEnabled(false);
        jButtonExcluirPonto.setEnabled(false);
        jButtonAlterarReuniao.setEnabled(false);
        jButtonExcluirReuniao.setEnabled(false);
        jButtonCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/sair.PNG")));
    }

    private Reuniao pegaReuniaoSelecionadaNaLista() {
        Reuniao reuniao = null;
        String selecionado = (String) jListReunioes.getSelectedValue();
        System.out.println("\n\n " + selecionado + "\n\n");
        if (selecionado != null) {
            String[] pegaCodigo = selecionado.split(" - ");
            System.out.println(selecionado);
            for (int i = 0; i < pegaCodigo.length; i++) {
                System.out.println(pegaCodigo[i]);
            }
            int codigo = Integer.parseInt(pegaCodigo[0]);
            System.out.println("Codigo \n\n" + codigo);
            reuniao = reuniaoControl.getReuniao(codigo);
        }
        return reuniao;
    }

    private void preenchePontosPauta(Reuniao reuniaoSelecionada) {
        modelo.removeAllElements();
        //pega o código da reuniao, pesquisa a ata dessa reuniao, pesquisa os pontos de pauta dessa ata
        ArrayList<Pauta> arrayPontos = pautaControl.getPautas(ataControl.getAta(reuniaoSelecionada.getCodigo()).getCodigo());
        for (Pauta pau : arrayPontos) {
            modelo.addElement(pau.getTitulo());
        }
        jListPontosPauta.setModel(modelo);
    }

    private void preencheGrupoParticipante(Reuniao reuniaoSelecionada) {
        jComboBoxGrupoParticipante.removeAllItems();
        jComboBoxGrupoParticipante.addItem(reuniaoSelecionada.getGrupo().getCodigo()
                + " - " + reuniaoSelecionada.getGrupo().getNome());
        for (Grupo gru : grupoControl.getGrupos(coordenador.getSiape())) {
            if (!(gru.getCodigo() == reuniaoSelecionada.getGrupo().getCodigo())) {
                jComboBoxGrupoParticipante.addItem(gru.getCodigo() + " - " + gru.getNome());
            }
        }
    }

    private void preencheResponsavelAta(Reuniao reuniaoSelecionada) {
        jComboBoxResponsavelAta.removeAllItems();
        String siape = reuniaoSelecionada.getSiapeResponsavelAta();
        jComboBoxResponsavelAta.addItem(siape + " - " + servidorControl.getServidor(siape).getNome());
        for (Servidor ser : reuniaoSelecionada.getGrupo().getServidores()) {
            if (!(ser.getSiape().equals(siape))) {
                jComboBoxResponsavelAta.addItem(ser.getSiape() + " - " + ser.getNome());
            }
        }
    }

    private void cadastraTodosOsPontos(Reuniao reuniao) {
        Ata ata = ataControl.getAta(reuniao.getCodigo());
        //removendo todos os pontos de pauta da reuniao para cadastrar novamente
        for (Pauta pau : pautaControl.getPautas(ata.getCodigo())) {
            pautaControl.deleta(pau.getCodigo());
        }
        ArrayList<String> titulos = pegaPontos();
        for (int i = 0; i < titulos.size(); i++) {
            Pauta p = new Pauta();
            p.setTitulo(titulos.get(i));
            p.setAta(ataControl.getAta(reuniao.getCodigo()));
            p.setDefinicao(" - ");
            p.setEncaminhamento(" - ");
            pautaControl.adiciona(p);
        }
    }

    private void enviaEmail(int op) {
        String senha = "";
        senha = JOptionPane.showInputDialog(
                "Atenção: será enviado uma mensagem aos demais participantes do seu grupo através \n"
                + "de seu email cadastrado no sistema, por favor informe a senha do seu email: ", "");
        if (!senha.equals("")) {
            try {
                EnviarEmailControl email = new EnviarEmailControl();
                int codigo = pegaCodigoGrupo();
                Grupo aux = pegaGrupoDoCombo(codigo);
                ArrayList<Servidor> emailsServidores = servidorControl.getServidoresParticipantesDoGrupo(pegaCodigoGrupo());
                ArrayList<Aluno> emailsAlunos = alunoControl.getAlunosParticipantesDoGrupo(pegaCodigoGrupo());
                String mensagem = null;
                if (op == 0) { // opção de cadastro
                    mensagem = "Uma reunião foi marcada para seu grupo de " + aux.getNome() + " às " + jTextFieldHora.getText() + " horas"
                            + " do dia " + retornaData() + ". Informe ao coordenador se você poderá comparecer.";
                } else if (op == 1) { // opção de atualização
                    String data = new SimpleDateFormat("dd-MM-yyyy").format(reuniaoAntiga.getData());
                    mensagem = "A reunião que estava  marcada para seu grupo de " + reuniaoAntiga.getGrupo().getNome() + " às " + reuniaoAntiga.getHorarioInicio() + " horas"
                            + " do dia " + data + " foi REMARCADA para às " + jTextFieldHora.getText() + " horas do dia " + retornaData() + ". Informe ao coordenador se você poderá comparecer.";
                } else if (op == 2) { // opção de atualização
                    String data = new SimpleDateFormat("dd-MM-yyyy").format(reuniaoAntiga.getData());
                    mensagem = "A reunião que estava  marcada para seu grupo de " + reuniaoAntiga.getGrupo().getNome() + " às " + reuniaoAntiga.getHorarioInicio() + " horas"
                            + " do dia " + data + " foi CANCELADA.";
                }
                email.email(emailsServidores, emailsAlunos, senha, mensagem, coordenador);
            } catch (Exception e) {
                e.getMessage();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Não foi possível mandar o email, mas a reunião foi cadastrada !!!");
        }
    }
}
